plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.polytech'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(23)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Lombok 1.8.30 minimal version with JDK 21
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'

    // Java Persistence API
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Datasource Proxy for logging SQL queries
    implementation 'com.github.gavlyukovskiy:datasource-proxy-spring-boot-starter:1.9.1'

    // Apache Commons CSV
    implementation 'org.apache.commons:commons-csv:1.9.0'

    // Apache Commons Text
    implementation 'org.apache.commons:commons-text:1.10.0'
}

test {
    testLogging {
        // Affiche les événements de passage, échec, saut et sortie standard/erreur
        events "passed", "skipped", "failed", "standardOut", "standardError"
        
        // Affiche toujours les flux de sortie standard
        showStandardStreams = true
        
        // Affiche les détails complets pour tous les événements
        showExceptions true
        showCauses true
        showStackTraces true
    }
    useJUnitPlatform()
}
